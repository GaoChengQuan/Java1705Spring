<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd      
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-4.1.xsd      
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd      
            http://www.springframework.org/schema/util   
            http://www.springframework.org/schema/util/spring-util-4.1.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" >
    
    <!-- 1、配置目标对象，加入IOC容器 -->
    <bean name="studentDaoTarget" class="com.situ.spring.dao.impl.StudentDaoImpl"></bean>
	
	<!-- 2、配置通知（增强）对象，加入IOC容器 -->
	<bean name="myAdvice" class="com.situ.spring.aop.MyAdvice"/>
	
	<!-- 3、将通知myAdvice织入到目标对象studentDaoTarget -->
	<aop:config>
		<!-- 配置切入点 -->
		<aop:pointcut expression="execution(void com.situ.spring.dao.impl.StudentDaoImpl.save())" id="pc"/>
		<!-- 配置切面 :切入点+通知 -->
		<aop:aspect ref="myAdvice">
			<!-- 前置通知:目标方法运行之前调用 -->
			<aop:before method="before" pointcut-ref="pc"/>
			<!-- 后置通知(如果出现异常不会调用)在目标方法运行之后调用 -->
			<aop:after-returning method="afterReturning" pointcut-ref="pc"/>
			<!-- 环绕通知:在目标方法之前和之后都调用 -->
			<aop:around method="around" pointcut-ref="pc"/>
			<!-- 异常通知:如果出现异常,就会调用 -->
			<aop:after-throwing method="afterException" pointcut-ref="pc"/>
			<!-- 后置通知:(无论是否出现 异常都会调用)在目标方法运行之后调用 -->
			<aop:after method="after" pointcut-ref="pc"/>
		</aop:aspect>
	</aop:config>
	
	
	
</beans>